# This file is part of HDL Code Checker.
#
# HDL Code Checker is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# HDL Code Checker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with HDL Code Checker.  If not, see <http://www.gnu.org/licenses/>.
---
language: python
python:
  - "2.7"
  - "3.5"

env:
  matrix:
    - BUILDER=msim
    - BUILDER=ghdl
    - BUILDER=fallback
    - BUILDER=standalone
    - BUILDER=xvhdl

before_install:
  - if [ "$BUILDER" == "msim" ]; then
      sudo dpkg --add-architecture i386;
      sudo apt-get update -qq;
      sudo apt-get install build-essential;
      sudo apt-get install gcc-multilib g++-multilib lib32z1 lib32stdc++6 lib32gcc1 expat:i386 fontconfig:i386 libfreetype6:i386 libexpat1:i386 libc6:i386 libgtk-3-0:i386 libcanberra0:i386 libpng12-0:i386 libice6:i386 libsm6:i386 libncurses5:i386 zlib1g:i386 libx11-6:i386 libxau6:i386 libxdmcp6:i386 libxext6:i386 libxft2:i386 libxrender1:i386 libxt6:i386 libxtst6:i386;
    fi
  - if [ "$BUILDER" == "xvhdl" ]; then
      sudo apt-get update -qq;
      sudo apt-get install -qq libtcl8.5;
    fi

before_script:
  - "git clone https://github.com/suoto/grlib .ci/test_support/grlib --depth 1"
  - "git submodule update"
  - "mkdir -p ~/cache"
  - if [ "${BUILDER}" == "msim" ]  ; then "./.ci/scripts/setup_msim.sh"; fi
  - if [ "${BUILDER}" == "ghdl" ]  ; then "./.ci/scripts/setup_ghdl.sh"; fi
  - if [ "${BUILDER}" == "xvhdl" ] ; then "./.ci/scripts/setup_xvhdl.sh"; fi
# command to install dependencies
install:
  - pip install -r requirements.txt
  - pip install git+https://github.com/suoto/rainbow_logging_handler
  - pip install -e .
# command to run tests
# script: "./run_tests.sh ${BUILDER} -vv --log-capture"
script: "./run_tests.py --${BUILDER} -v"
after_failure:
  - "cat tests.log"
after_success:
  - "coverage combine"
  - "coverage report"
  - "export COVERALLS_PARALLEL=true"
  - "coveralls"
  - "codecov"
cache:
  pip: true
  directories:
    - ~/cache/
